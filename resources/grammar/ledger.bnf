(* ledger grammar file *)
(* vim: set ft=ebnf : *)

<LedgerEntries> = (
      CommentHeader
    | CommentBlock
    | IncludeFile
    | AccountDefinition
    | CommodityDefinition
    | CommodityConversion
    | CommodityPrice
    | Transaction
)+;


(* Text *)
<NL> = <'\n'> ;
<Indent> = <'    '> ;
<Text> = #"\S?[^\n]*\S" ;

(* Dates *)
Date = #"\d{4}-\d\d-\d\d" ;
Time = ( #"\d\d:\d\d" | #"\d\d:\d\d:\d\d" ) , [ <[' ']> , TimeZone ] ;
TimeZone = 'Z' | #"-?\d\d:\d\d" | #"[A-Z][a-zA-Z]+(/[a-zA-Z0-9_-]+)*" ;
DateTime = Date , <( 'T' | ' ' )> , Time ;

(* Numbers *)
<NonZeroDigit> = '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' ;
<Digit>        = '0' | NonZeroDigit ;
Number         = ['-'] , ( Digit | ( NonZeroDigit , ( Digit | <','> )+ ) ) , [ '.' , Digit+ ] ;
Percentage     = Number , <'%'> ;

(* Financial Quantities *)
CommodityCode = '$' | #"[a-zA-Z][a-zA-Z_]*" | <'"'> , #"[a-zA-Z][a-zA-Z0-9_]*" , <'"'> ;
Quantity = '0' | ( CommodityCode , <[' ']> , Number ) | ( Number , <[' ']> , CommodityCode ) ;

(* Account References *)
<AccountPathWord> = #"[a-zA-Z0-9&][a-zA-Z0-9-.]*" ;
AccountPathSegment = AccountPathWord , ( ' ' , AccountPathWord )* ;
AccountPath = #"[A-Z][a-zA-Z]+" , ( <':'> , AccountPathSegment )* ;
AccountAlias = #"[a-z][a-zA-Z0-9-]*[a-z0-9]" ;
<AccountRef> = AccountPath | AccountAlias ;
RealAccountRef = AccountRef ;
VirtualAccountRef = <'('> , AccountRef , <')'> ;
BalancedVirtualAccountRef = <'['> , AccountRef , <']'> ;

(* Comments & Includes *)
CommentHeader = <';;;;; '> , #"[^;]*[^ ;]" , <' ;;;;;\n'> ;
CommentBlock = ( <'; '> , Text , NL | <';'> , '\n' )+ , !CommentBlock ;
IncludeFile = <'include '> , #"\S+" , NL ;

(* Account Definitions *)
AccountDefinition = <'account '> , AccountPath , NL , AccountDirective* ;
<AccountDirective> = Indent , ( AccountAliasDirective | AccountNote | AccountAssertion ) , NL ;
AccountAliasDirective = <'alias '> , AccountAlias ;
AccountNote = <'note '> , Text ;
AccountAssertion = <'assert '> , Text ;

(* Commodity Definitions *)
CommodityDefinition = <'commodity '> , CommodityCode , NL , CommodityDirective* ;
<CommodityDirective> = Indent , ( CommodityNote | CommodityFormat | CommodityOption ) , NL ;
CommodityNote = <'note '> , Text ;
CommodityFormat = <'format '> , Text ;
CommodityOption = 'nomarket' | 'default' ;

(* Commodity Conversions and Prices *)
CommodityConversion = <'C '> , Quantity , <' = '> , Quantity , NL ;
CommodityPrice = <'P '> , Date , <' '> , CommodityCode , <' '+> , Quantity , NL ;

(* Standard Metadata *)
TagName = #"[a-zA-Z0-9-]+" ;

TimeMetaTag = 'time: ' ;
TimeMeta = <TimeMetaTag> , ( Time | DateTime ) ;

SourceMetaTag = 'source: ' ;
SourceMeta = <SourceMetaTag> , TagName , <'|'> , Text ;

LineItemTag = 'item: ' ;

SpecialMetaTag = TimeMetaTag | SourceMetaTag | LineItemTag ;
MetaEntry = !SpecialMetaTag , ( <':'> , TagName , <':'> | TagName , <': '> , Text ) ;
MetaComment = !( SpecialMetaTag | MetaEntry ) , Text ;

(* Transactions *)
Transaction = Date ,
              [ <' '> , TxStatus ] ,
              [ <' '> , TxCode ] ,
              <' '> , !TxStatus , !TxCode , TxMemo , NL ,
              TxDetail* ,
              Posting+ ;

TxStatus = '!' | '*' ;
TxCode = <'('> , #"[^)]+" , <')'> ;
TxMemo = Text ;
<TxDetail> = Indent , <'; '> , ( TimeMeta | MetaEntry | MetaComment ) , NL ;

(* Postings *)
Posting = Indent ,
          PostingAccount ,
          [ <'  '> ,
            [ <' '*> , Quantity ,
              [ <' '+> , PostingLotCost ,
                [ <' '+> , PostingLotDate ] ] ,
              [ <' '+> , PostingPrice ] ] ,
            [ <' '*> , PostingBalance ] ,
            [ <' '*> , <'  ; '> , ( MetaEntry | MetaComment ) ] ] ,
          NL ,
          PostingDetail* ;

<PostingAccount> = RealAccountRef | VirtualAccountRef | BalancedVirtualAccountRef ;
PostingLotCost = <'{'> , Quantity , <'}'> ;
PostingLotDate = <'['> , Date , <']'> ;
PostingPrice = <'@'> , <' '+> , Quantity ;
PostingBalance = <'='> , <' '+> , Quantity ;
PostingDate = <'['> , <['=']> , Date , <']'> ;
<PostingDetail> = Indent , Indent , <'; '> , ( TimeMeta | SourceMeta | PostingDate | LineItem | MetaEntry | !PostingDate , MetaComment ) , NL ;
PostingComment = !PostingDate , Text ;

(* Line Items *)
LineItem = <LineItemTag> ,
           #"\S+( \S+)*" ,
           [ <' '+> , LineItemAmount ,
             [ <' '+> , LineItemDetail ] ,
             [ <' '+> ,  ( LineItemTaxGroups | LineItemTaxApplied ) ] ] ;

LineItemAmount = Quantity ;
<LineItemDetail> = <'('> , <' '*> , LineItemQuantity , <' '+> , <'@'> , <' '+> , LineItemCost , <')'> ;
LineItemQuantity = Number | Quantity ;
LineItemCost = Quantity | Percentage ;
LineItemTaxGroup = #"\*+" ;
LineItemTaxGroups = LineItemTaxGroup , ( <' '> , LineItemTaxGroup )* ;
LineItemTaxApplied = <'<'> , LineItemTaxGroup , <'>'> ;
