(* ledger grammar file *)
(* vim: set ft=ebnf : *)

LedgerEntry = (
      CommentHeader
    | CommentBlock
    | IncludeFile
    | AccountDefinition
    | CommodityDefinition
    | CommodityConversion
    | CommodityPrice
    | Transaction
)+;


(* Text *)
<NL> = <'\n'> ;
<Indent> = <'    '> ;
<Text> = #"\S?[^\n]*\S" ;
<TagName> = #"[a-zA-Z0-9-]+" ;

(* Dates *)
Date = #"\d{4}-\d\d-\d\d" ;

(* Numbers *)
<NonZeroDigit> = '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' ;
<Digit>        = '0' | NonZeroDigit ;
Number         = ['-'] , ( Digit | ( NonZeroDigit , ( Digit | <','> )+ ) ) , [ '.' , Digit+ ] ;

(* Comments & Includes *)
CommentHeader = <';;;;; '> , #"[^;]*[^ ;]" , <' ;;;;;\n'> ;
CommentBlock = ( <'; '> , Text , NL | <';'> , '\n' )+ , !CommentBlock , !Transaction ;
IncludeFile = <'include '> , #"\S+" , NL ;

(* Account Definitions *)
<AccountPathWord> = #"[A-Z0-9&][a-zA-Z0-9-.]*" ;
AccountPathSegment = AccountPathWord , ( ' ' , AccountPathWord )* ;
AccountPath = AccountPathSegment , ( <':'> , AccountPathSegment )* ;
AccountAlias = #"[a-z][a-zA-Z0-9-]*[a-z0-9]" ;

AccountDefinition = <'account '> , AccountPath , NL , AccountDirective* ;
<AccountDirective> = Indent , ( AccountAliasDirective | AccountNote | AccountAssertion ) , NL ;
AccountAliasDirective = <'alias '> , AccountAlias ;
AccountNote = <'note '> , Text ;
AccountAssertion = <'assert '> , Text ;

(* Commodity Definitions *)
CommodityCode = '$' | #"[a-zA-Z][a-zA-Z0-9_]+" ;
Quantity = ( CommodityCode , <[' ']> , Number ) | ( Number , <[' ']> , CommodityCode ) ;

CommodityDefinition = <'commodity '> , CommodityCode , NL , CommodityDirective* ;
<CommodityDirective> = Indent , ( CommodityNote | CommodityFormat | CommodityOption ) , NL ;
CommodityNote = <'note '> , Text ;
CommodityFormat = <'format '> , Text ;
CommodityOption = 'nomarket' | 'default' ;

(* Commodity Conversions and Prices *)
CommodityConversion = <'C '> , Quantity , <' = '> , Quantity , NL ;
CommodityPrice = <'P '> , Date , <' '> , CommodityCode , <' '+> , Quantity , NL ;

(* Transactions *)
Transaction = TxSource* , Date , [ <' '> , TxStatus ] , <' '> , !TxStatus , TxMemo , NL , TxDetail* , Posting+ ;
TxSource = <'; '> , AccountAlias , <'|'> , Text , NL ;
TxStatus = '!' | '*' ;
TxMemo = Text ;
TxDetail = TxMeta | !TxMeta TxComment ;
TxMeta = Indent , <'; '> , ( TagName , <': '> , Text | <':'> , TagName , <':'> ) , NL ;
TxComment = Indent , <'; '> , Text , NL ;

(* Postings *)
Posting = Indent , ( AccountPath | AccountAlias ) , [ <' '+> , PostingAmount , [ <' '> , PostingCost , [ <' '> , PostingLotDate ] ] , [ <' '> , PostingPrice ] ] , [ <' '*> , PostingBalance ] , [ <' '+> , <' ; '> , ( PostingMeta | PostingComment ) ] , NL , PostingDetail* ;
PostingAmount = Quantity ;
PostingCost = <'{'> , Quantity , <'}'> ;
PostingPrice = <'@ '> , Quantity ;
PostingLotDate = <'['> , Date , <']'> ;
PostingBalance = <' = '> , <' '*> , Quantity ;
PostingDetail = Indent , Indent , <'; '> , ( PostingDate | PostingMeta | PostingComment ) , NL ;
PostingDate = <'['> , <['=']> , Date , <']'> ;
PostingMeta = TagName , <': '> , Text | <':'> , TagName , <':'> ;
PostingComment = !PostingDate , !PostingMeta , Text ;
